[{"content":"","date":"2023-09-07","id":0,"permalink":"/blog/example-post/","summary":"","tags":[],"title":"Example Post"},{"content":"","date":"2023-09-07","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":2,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"How can we package unikernels in the OCI image format?\nTo address this challenge, we created bima, a tool specifically designed for this purpose. bima follows a simplistic approach by creating a pseudo rootfs and storing the unikernel blob in a designated location, along with any additional files required for running the unikernel (such as a configuration file). Custom OCI annotations, intentionally extensible, are utilized by bima to furnish the runtime with crucial information on how to execute the unikernel. This information includes the storage location of the unikernel within the rootfs, the desired hypervisor type, the necessary command line parameters, and the location of any extra required files.\nCode: https://github.com/nubificus/bima Contact: gntouts at nubificus.co.uk dot co\r, cmainas at nubificus.co.uk dot co\r, ananos at nubificus.co.uk dot co\r","date":"2023-11-10","id":3,"permalink":"/projects/bima/","summary":"How can we package unikernels in the OCI image format?\nTo address this challenge, we created bima, a tool specifically designed for this purpose.","tags":[],"title":"bima"},{"content":"FlexOS is a unikernel-based OS allowing users to easily specialize the safety and isolation strategy of an OS at compilation/deployment time, instead of design time. Depending on the configuration, the same FlexOS code can mimic a microkernel with multiple address-spaces, a single-address-space OS with Intel MPK compartments, or many other OS isolation approaches.\nWebsite: https://project-flexos.github.io/ Code: https://github.com/project-flexos/unikraft Contact: hugo.lefeuvre at manchester.ac.uk dot ac\r","date":"2023-11-10","id":4,"permalink":"/projects/flexos/","summary":"FlexOS is a unikernel-based OS allowing users to easily specialize the safety and isolation strategy of an OS at compilation/deployment time, instead of design time.","tags":[],"title":"FlexOS"},{"content":"HermiTux is a unikernel binary-compatible with Linux: it can run native Linux executables. It supports multiple compiled (C, C++, Fortran) and interpreted (Python, LUA) languages. It provides binary analysis and rewriting techniques to optimize system call latency and modularize a kernel in the presence of unmodified binaries. It supports statically and dynamically linked programs, different compilers and optimization levels. HermiTux also provides basic support for multithreading, debugging and profiling.\nWebsite: https://ssrg-vt.github.io/hermitux/ Code: https://github.com/ssrg-vt/hermitux Contact: pierre.olivier at manchester.ac.uk dot ac\r","date":"2023-11-10","id":5,"permalink":"/projects/hermitux/","summary":"HermiTux is a unikernel binary-compatible with Linux: it can run native Linux executables. It supports multiple compiled (C, C++, Fortran) and interpreted (Python, LUA) languages.","tags":[],"title":"HermiTux"},{"content":"Loupe is a tool designed to help collect and analyze the system call usage of an application. The tool can tell you what system calls need to be implemented in a custom OS to run the analyzed application, and visualize these numbers in a variety of plots.\nWebsite: https://github.com/unikraft/loupe Code: https://github.com/unikraft/loupe Contact: pierre.olivier at manchester.ac.uk dot ac\r","date":"2023-11-10","id":6,"permalink":"/projects/loupe/","summary":"Loupe is a tool designed to help collect and analyze the system call usage of an application. The tool can tell you what system calls need to be implemented in a custom OS to run the analyzed application, and visualize these numbers in a variety of plots.","tags":[],"title":"Loupe"},{"content":"An open-source unikernel designed to run a single unmodified Linux application securely as microVM on top of a hypervisor, when compared to traditional operating systems which were designed for a vast range of physical machines. OSv can execute precompiled Linux dynamically-linked binaries that use glibc, dynamically-linked binaries which use system calls directly instead of glibc (e.g., golang) as well as glibc functions, and finally statically linked and dynamically linked executables with full Linux glibc instead of built-in OSv’ glibc. OSv guests can run on QEMU/KVM, Firecracker, Cloud Hypervisor, VMWare, VirtualBox, HyperKit and XEN (AWS Nitro support is coming soon).\nWebsite: https://osv.io/ Code: https://github.com/cloudius-systems/osv Contact: https://groups.google.com/g/osv-dev ","date":"2023-11-10","id":7,"permalink":"/projects/osv/","summary":"An open-source unikernel designed to run a single unmodified Linux application securely as microVM on top of a hypervisor, when compared to traditional operating systems which were designed for a vast range of physical machines.","tags":[],"title":"OSv"},{"content":"Unikraft is a fast, secure and open source unikernel development kit. Unikraft powers the next-generation of cloud native applications by enabling you to radically customize and build custom OS/kernels, unlocking best-in-class performance, security primitives and efficiency savings.\nUnikraft technology powers the KraftCloud platform (https://www.kraft.cloud/).\nWebsite: https://unikraft.org/ Code: https://github.com/unikraft/ Contact: http://bit.ly/UnikraftDiscord ","date":"2023-11-10","id":8,"permalink":"/projects/unikraft/","summary":"Unikraft is a fast, secure and open source unikernel development kit. Unikraft powers the next-generation of cloud native applications by enabling you to radically customize and build custom OS/kernels, unlocking best-in-class performance, security primitives and efficiency savings.","tags":[],"title":"Unikraft"},{"content":"To bridge the gap between unikernels and traditional containerized environments, enabling seamless integration with cloud-native architectures, we introduce urunc. Designed to fully leverage the container semantics and benefit from the OCI tools and methodology, urunc aims to become “runc for unikernels”, while offering compatibility with the Container Runtime Interface (CRI). By relying on underlying hypervisors, urunc launches unikernels provided by OCI-compatible images, allowing developers and administrators to package, deliver, deploy, and manage unikernels using familiar cloud-native practices.\nCode: https://github.com/nubificus/urunc Contact: gntouts at nubificus.co.uk dot co\r, cmainas at nubificus.co.uk dot co\r, ananos at nubificus.co.uk dot co\r","date":"2023-11-10","id":9,"permalink":"/projects/urunc/","summary":"To bridge the gap between unikernels and traditional containerized environments, enabling seamless integration with cloud-native architectures, we introduce urunc. Designed to fully leverage the container semantics and benefit from the OCI tools and methodology, urunc aims to become “runc for unikernels”, while offering compatibility with the Container Runtime Interface (CRI).","tags":[],"title":"urunc"},{"content":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.\nFurther reading Read about how-to guides in the Diátaxis framework ","date":"2023-09-07","id":10,"permalink":"/docs/guides/example-guide-111/","summary":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.","tags":[],"title":"Example Guide 111"},{"content":"","date":"2023-09-07","id":11,"permalink":"/docs/reference/","summary":"","tags":[],"title":"Reference"},{"content":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\nFurther reading Read about reference in the Diátaxis framework ","date":"2023-09-07","id":12,"permalink":"/docs/reference/example-reference/","summary":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.","tags":[],"title":"Example Reference"},{"content":"","date":"2023-11-10","id":13,"permalink":"/docs/","summary":"","tags":[],"title":"Projects"},{"content":"","date":"2023-11-10","id":14,"permalink":"/projects/","summary":"","tags":[],"title":"Projects"},{"content":"","date":"2023-09-07","id":15,"permalink":"/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2023-09-07","id":16,"permalink":"/","summary":"","tags":[],"title":"Unikernel Alliance"},{"content":"","date":"0001-01-01","id":17,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":18,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":19,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]